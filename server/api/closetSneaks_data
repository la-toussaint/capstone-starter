const express = require('express');
const router = express.Router();
const { updateClosetSneaks_data, canEditClosetSneaks_data, destroyClosetSneaks_data, getClosetSneaks_dataById } = require('../db');
const client = require('../db/client');
const { requireCustomer, requiredNotSent } = require('./utils')



// PATCH /api/closet_activities/:closetSneaks_data_id
router.patch('/:closetSneaks_data_id', requireCustomer, requiredNotSent({requiredParams: ['count', 'duration'], atLeastOne: true}), async (req, res, next) => {
  try {
    const {count, duration} = req.body;
    const {closetSneaks_data_id} = req.params;
    const closetSneaks_dataToUpdate = await getClosetSneaks_dataById(closetSneaks_data_id);
    if(!closetSneaks_dataToUpdate) {
      next({
        name: 'NotFound',
        message: `No closet_sneaks_data found by ID ${closetSneaks_data_id}`
      })
    } else {
      if(!await canEditClosetSneaks_data(req.params.closetSneaks_data_id, req.customer_id)) {
        res.status(403);
        next({name: "Unauthorized", message: "You cannot edit this closet_sneaks_data!"});
      } else {
        const updatedClosetSneaks_data = await updateClosetSneaks_data({id: req.params.closetSneaks_data_id, count, duration})
        res.send(updatedClosetSneaks_data);
      }
    }
  } catch (error) {
    next(error);
  }
});

// DELETE /api/closet_activities/:closetSneaks_data_id
router.delete('/:closetSneaks_data_id', requireCustomer, async (req, res, next) => {
  try {
    if(!await canEditClosetSneaks_data(req.params.closetSneaks_data_id, req.customer_id)) {
      res.status(403);
      next({name: "Unauthorized", message: "You cannot edit this closet_sneaks_data!"});
    } else {
      const deletedClosetSneaks_data = await destroyClosetSneaks_data(req.params.closetSneaks_data_id)
      res.send({success: true, ...deletedClosetSneaks_data});
    }
  } catch (error) {
    next(error);
  }
});

module.exports = router;
